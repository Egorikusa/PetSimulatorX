local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
-- IMPORTANT LOCALS
local PartnerRank = "üî•Partner"
local DeveloperRank = "‚öíÔ∏èDeveloper"
local ModeratorRank = "üîßModerator"
local LeaderboardRank = "üåç#82"
local Wow = "                                                                                                                                                       "
local speed = (game.Players.LocalPlayer.Character.Humanoid.WalkSpeed)
local jump = (game.Players.LocalPlayer.Character.Humanoid.JumpPower)
Username = game.Players.LocalPlayer.DisplayName
SpamTime = 10
-- SCRIPT
local Window = OrionLib:MakeWindow({Name = "Fake Tags", HidePremium = false, SaveConfig = true, ConfigFolder = "Egorikusa Fake Tags"})

local Tab = Window:MakeTab({
	Name = "Misc Scripts",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Anti Lag",
	Callback = function()
      		local lighting = game.Lighting
local terrain = game.Workspace.Terrain
terrain.WaterWaveSize = 0
terrain.WaterWaveSpeed = 0
terrain.WaterReflectance = 0
terrain.WaterTransparency = 0
lighting.GlobalShadows = false
lighting.FogStart = 0
lighting.FogEnd = 0
lighting.Brightness = 0
settings().Rendering.QualityLevel = "Level01"

for i, v in pairs(game:GetDescendants()) do
    if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Explosion") then
        v.BlastPressure = 1
        v.BlastRadius = 1
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
        v.Enabled = false
    elseif v:IsA("MeshPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
    end
end

for i, e in pairs(lighting:GetChildren()) do
    if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
        e.Enabled = false
    end
end
  	end    
})

Tab:AddButton({
	Name = "Visual Hoverboards",
	Callback = function()
local sex1 = require(game:GetService("ReplicatedStorage").Library.Client.Save).Get()
  sex1.Hoverboards = {}
for i,v in pairs(game:GetService("ReplicatedStorage")["__DIRECTORY"].Hoverboards:GetChildren())do
    if v:IsA("Folder") then
     table.insert(sex1.Hoverboards, v.Name)
    end
end
getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.GUIs.Hoverboards).Update()
    getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.GUIs.Hoverboards).Equip = function(board)
      sex1.EquippedHoverboard = board
    getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.GUIs.Hoverboards).Update()
end
  	end    
})

Tab:AddSlider({
	Name = "Speed Power",
	Min = 1,
	Max = 250,
	Default = 24,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "speed",
	Callback = function(Value)
       game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
	end    
})

Tab:AddSlider({
	Name = "Jump Power",
	Min = 1,
	Max = 250,
	Default = 50,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "jump",
	Callback = function(Value)
       game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
	end    
})

local Tab = Window:MakeTab({
	Name = "Fake Tags",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Basic Settings",
	Callback = function()
Rank = PartnerRank
Message = "SIGNING HUGES TRADE ME"
SpamTime = 30
Username = game.Players.LocalPlayer.DisplayName
PlayerMessage = ""
  	end    
})

Tab:AddDropdown({
	Name = "Rank Picker",
	Default = "Partner",
	Options = {"Partner","Developer","Moderator","Leaderboard"},
	Callback = function(Value)
if Value == 'Partner' then
            Rank = PartnerRank
        elseif Value == 'Developer' then
            Rank = DeveloperRank
        elseif Value == 'Moderator' then
            Rank = ModeratorRank
        elseif Value == 'Leaderboard' then
            Rank = LeaderboardRank
        end
	end    
})

Tab:AddTextbox({
	Name = "Player Message",
	Default = "",
	TextDisappear = true,
	Callback = function(Text)
PlayerMessage = Text
	end	  
})

Tab:AddTextbox({
	Name = "Partner Username",
	Default = "",
	TextDisappear = true,
	Callback = function(User)
Username = User
	end	  
})

Tab:AddTextbox({
	Name = "Partner Message",
	Default = "",
	TextDisappear = true,
	Callback = function(Text)
Message = Text
	end	  
})

Tab:AddButton({
	Name = "Send Message",
	Callback = function()
        if Rank and Message then -- Check that Rank and Message have been properly assigned values
            game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(""..PlayerMessage..""..Wow.."["..Rank.."] ["..Username.."]: "..Message, "All")
        end
  	end    
})

Tab:AddSlider({
	Name = "Spam Speed",
	Min = 1,
	Max = 60,
	Default = 10,
	Color = Color3.fromRGB(255,0,255),
	Increment = 1,
	ValueName = "Seconds",
	Callback = function(Value)
SpamTime = (Value)
	end    
})

Tab:AddToggle({
	Name = "Message Spam",
	Default = false,
	Callback = function(Value)
  task.spawn(function()
  getgenv().toggleLoop = Value
  while getgenv().toggleLoop and task.wait() do
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(""..Wow.."["..Rank.."] ["..Username.."]: "..Message.."", "All")
wait(SpamTime)
end
end)
	end    
})

Tab:AddButton({
	Name = "Serverhop (big servers)",
	Callback = function()
local function serverhop()
            print("Server hop is triggered")
            local response = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Desc&limit=50"))
            if response and response["data"] then
                for i, v in pairs(response["data"]) do
                    if v["playing"] ~= v["maxPlayers"] then
                        game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v["id"])
                        break
                    end
                end
            else
                print("Error: failed to decode JSON response or missing data field.")
            end
        end
        while true do
wait(0.1)
        serverhop()
       end
  	end    
})

Tab:AddButton({
	Name = "Serverhop (small servers)",
	Callback = function()
local function serverhop1()
            print("Server hop is triggered")
            local response = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=50"))
            if response and response["data"] then
                for i, v in pairs(response["data"]) do
                    if v["playing"] ~= v["maxPlayers"] then
                        game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v["id"])
                        break
                    end
                end
            else
                print("Error: failed to decode JSON response or missing data field.")
            end
        end
        while true do
wait(0.1)
        serverhop1()
       end
  	end    
})

Tab:AddTextbox({
	Name = "Webhook For Trade Check",
	Default = "",
	TextDisappear = true,
	Callback = function(Text)
Webhook = Text
	end	  
})

local Tab = Window:MakeTab({
	Name = "For Devs (ignore)",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "print",
	Callback = function()
print("Rank is "..Rank.."")
print("Space is "..Wow.."")
print("Username is "..Username.."")
print("dummy message is "..Message.."")
print("your message is "..PlayerMessage.."")
print("spam speed is "..SpamTime.."")
  	end    
})


local sometext = "Someone sent u a trade, go scam him!"
local url = Webhook
local data1 = {
        ["content"] = "||@everyone||\n**üëëEgorikusa Fake Tag Detected A Tradeüëë**",
        ["embeds"] = {
            {
                ["title"] = "```Made By Weizzy and Egorikusa```",
                ["url"] = "https://discord.gg/vtwbvEyMNA",
                ["description"] = "```"..sometext.."```",
                ["type"] = "rich",
                ["color"] = tonumber(0xFFFFFF),
                ["thumbnail"] = {
                    ["url"] = imgs,
                    ["height"] = 420,
                    ["width"] = 420
                },
                ["fields"] = {
                    {
                        ["name"] = "GIVE MONEY TO EGORIKUSA",
                        ["value"] = "",
                        ["inline"] = false
                    }
                }
            }
        }
    }
    local newdata1 = game:GetService("HttpService"):JSONEncode(data1)
    
    local headers = {
        ["content-type"] = "application/json"
    }
    local abcdef1 = {Url = url, Body = newdata1, Method = "POST", Headers = headers}
  

local Trading = game:GetService("Players").LocalPlayer.PlayerGui.Message
local lastEnabledState = Trading.Enabled


local function checkEnabledState()
    if Trading.Enabled then
        print("NEW TRADE")
        if Trading.Frame.Desc.Text:find("sent you a trade request%. Do you accept%?") then
        request(abcdef1)
        end
    end
    lastEnabledState = Trading.Enabled
end

Trading:GetPropertyChangedSignal("Enabled"):Connect(checkEnabledState)

local Library = require(game.ReplicatedStorage.Framework.Library);
local Players = game:GetService("Players")
local Client = Players.LocalPlayer
local PlayerInfos = require(game:GetService("ReplicatedStorage").Library.Client.Save).Get()
local savedPets = Library.Save.Get().Pets
